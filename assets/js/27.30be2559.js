(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{594:function(s,a,t){"use strict";t.r(a);var e=t(13),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"rabbitmq-集群环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-集群环境搭建"}},[s._v("#")]),s._v(" RabbitMQ 集群环境搭建")]),s._v(" "),t("h2",{attrs:{id:"clustering"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clustering"}},[s._v("#")]),s._v(" clustering")]),s._v(" "),t("h3",{attrs:{id:"使用集群的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用集群的原因"}},[s._v("#")]),s._v(" 使用集群的原因")]),s._v(" "),t("p",[s._v("最开始我们介绍了如何安装及运行 RabbitMQ 服务，不过这些是单机版的，无法满足目前真实应用的要求。如果 RabbitMQ 服务器遇到内存崩溃、机器掉电或者主板故障等情况，该怎么办？单台 RabbitMQ 服务器可以满足每秒 1000 条消息的吞吐量，那么如果应用需要 RabbitMQ 服务满足每秒 10 万条消息的吞吐量呢？购买昂贵的服务器来增强单机 RabbitMQ 务的性能显得捉襟见肘，搭建一个 RabbitMQ 集群才是 解决实际问题的关键.")]),s._v(" "),t("h2",{attrs:{id:"搭建步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤"}},[s._v("#")]),s._v(" 搭建步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("修改 2 台主机的名称")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/hostname\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改之后重启 linux, 使修改失效")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220115140725234.png",alt:"image-20220115140725234"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220115140735692.png",alt:"image-20220115140735692"}})]),s._v(" "),t("blockquote",[t("p",[s._v("配置各个节点的 hosts 文件，让各个节点都能互相识别对方")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/hosts\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175.24")]),s._v(".229.41 master\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("110.42")]),s._v(".138.132 slave1\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175.24")]),s._v(".163.161 slave2\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220115140832295.png",alt:"image-20220115140832295"}})]),s._v(" "),t("blockquote",[t("p",[s._v("测试是否能成功识别")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" master\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" salve\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220115140941072.png",alt:"image-20220115140941072"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220115140929774.png",alt:"image-20220115140929774"}})]),s._v(" "),t("blockquote",[t("p",[s._v("开启防火墙")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("firewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25672")]),s._v("/tcp --permanent\nfirewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4369")]),s._v("/tcp --permanent\nfirewall-cmd --reload\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("以确保各个节点的 cookie 文件使用的是同一个值")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 直接把 master 上面的 cookie 通过 xftp 拷贝过去")]),s._v("\nTUAOTMAWXVSQWDISMLNU\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("重启 RabbitMQ")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("/sbin/service rabbitmq-server restart\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("启动 RabbitMQ 服务,顺带启动 Erlang 虚拟机和 RbbitMQ 应用服务(在两台节点上分别执行以 下命令)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rabbitmq-server -detached\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("在节点 slave 执行")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (rabbitmqctl stop 会将 Erlang 虚拟机关闭，rabbitmqctl stop_app 只关闭 RabbitMQ 服务)")]),s._v("\nrabbitmqctl stop_app\n\nrabbitmqctl reset\nrabbitmqctl join_cluster rabbit@master\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (只启动应用服务)")]),s._v("\nrabbitmqctl start_app\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("查看集群状态")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rabbitmqctl cluster_status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116074446385.png",alt:"image-20220116074446385"}})]),s._v(" "),t("blockquote",[t("p",[s._v("重新设置账号")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建账号")]),s._v("\nrabbitmqctl add_user admin "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置用户角色")]),s._v("\nrabbitmqctl set_user_tags admin administrator\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置用户权限")]),s._v("\nrabbitmqctl set_permissions -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),s._v(" admin "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('".*"')]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("解除集群节点 (在 slave 节点上执行)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rabbitmqctl stop_app\nrabbitmqctl reset\nrabbitmqctl start_app\nrabbitmqctl cluster_status\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (slave 机器上执行)")]),s._v("\nrabbitmqctl forget_cluster_node rabbit@slave\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("blockquote",[t("p",[s._v("登录 web 控制台")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116074507939.png",alt:"image-20220116074507939"}})]),s._v(" "),t("h2",{attrs:{id:"镜像队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像队列"}},[s._v("#")]),s._v(" 镜像队列")]),s._v(" "),t("p",[s._v("如果 RabbitMQ 集群中只有一个 Broker 节点，那么该节点的失效将导致整体服务的临时性不可用，并且也可能会导致消息的丢失。可以将所有消息都设置为持久化，并且对应队列的durable属性也设置为true，但是这样仍然无法避免由于缓存导致的问题：因为消息在发送之后和被写入磁盘井执行刷盘动作之间存在一个短暂却会产生问题的时间窗。通过 publisherconfirm 机制能够确保客户端知道哪些消息己经存入磁盘，尽管如此，一般不希望遇到因单点故障导致的服务不可用。")]),s._v(" "),t("p",[s._v("引入镜像队列(Mirror Queue)的机制，可以将队列镜像到集群中的其他 Broker 节点之上，如果集群中的一个节点失效了，队列能自动地切换到镜像中的另一个节点上以保证服务的可用性。")]),s._v(" "),t("h3",{attrs:{id:"搭建步骤-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤-2"}},[s._v("#")]),s._v(" 搭建步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("启动三台集群节点")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("/sbin/service rabbitmq-server start\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("随便找一个节点添加 policy")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116075920798.png",alt:"image-20220116075920798"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116080157728.png",alt:"image-20220116080157728"}})]),s._v(" "),t("blockquote",[t("p",[s._v("测试")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116080221834.png",alt:"image-20220116080221834"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116080234304.png",alt:"image-20220116080234304"}})]),s._v(" "),t("blockquote",[t("p",[s._v("总结")])]),s._v(" "),t("p",[s._v("就算整个集群只剩下一台机器了 依然能消费队列里面的消息")]),s._v(" "),t("p",[s._v("说明队列里面的消息被镜像队列传递到相应机器里面了")]),s._v(" "),t("h2",{attrs:{id:"haproxy-keepalive-实现高可用负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#haproxy-keepalive-实现高可用负载均衡"}},[s._v("#")]),s._v(" Haproxy+Keepalive 实现高可用负载均衡")]),s._v(" "),t("h3",{attrs:{id:"整体架构图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整体架构图"}},[s._v("#")]),s._v(" 整体架构图")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116080758776.png",alt:"image-20220116080758776"}})]),s._v(" "),t("h3",{attrs:{id:"haproxy-实现负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#haproxy-实现负载均衡"}},[s._v("#")]),s._v(" Haproxy 实现负载均衡")]),s._v(" "),t("p",[s._v("HAProxy 提供高可用性、负载均衡及基于 TCPHTTP 应用的代理，支持虚拟主机，它是免费、快速并 且可靠的一种解决方案，包括 Twitter,Reddit,StackOverflow,GitHub 在内的多家知名互联网公司在使用。 HAProxy 实现了一种事件驱动、单一进程模型，此模型支持非常大的井发连接数。")]),s._v(" "),t("p",[t("a",{attrs:{href:"http://www.ha97.com/5646.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("扩展 nginx,lvs,haproxy 之间的区别"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"搭建步骤-未自己实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤-未自己实现"}},[s._v("#")]),s._v(" 搭建步骤(未自己实现)")]),s._v(" "),t("blockquote",[t("p",[s._v("下载 haproxy(在 node1 和 node2)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("yum -y "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" haproxy\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("修改 node1 和 node2 的 haproxy.cfg")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/haproxy/haproxy.cfg\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rabbitmq haproxy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#---------------------------------------------------------------------")]),s._v("\nserver rabbit_master "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175.24")]),s._v(".229.41:5672 check inter "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" rise "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" fall "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" weight "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nserver rabbit_slave "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("110.42")]),s._v(".138.132:5672 check inter "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(" rise "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" fall "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" weight "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("开启防火墙")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("firewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v("/tcp --permanent\nfirewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("/tcp --permanent\nfirewall-cmd --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5672")]),s._v("/tcp --permanent\nfirewall-cmd --reload\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("在两台节点启动 haproxy")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("haproxy -f /etc/haproxy/haproxy.cfg\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" haproxy\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("blockquote",[t("p",[s._v("访问地址")])]),s._v(" "),t("p",[t("a",{attrs:{href:"http://175.24.229.41:8888/stats",target:"_blank",rel:"noopener noreferrer"}},[s._v("master"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"http://110.42.138.132:8888/stats",target:"_blank",rel:"noopener noreferrer"}},[s._v("slave"),t("OutboundLink")],1)]),s._v(" "),t("blockquote",[t("p",[s._v("没搭成功, 不知道咋搭")])]),s._v(" "),t("h2",{attrs:{id:"federation-exchange"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#federation-exchange"}},[s._v("#")]),s._v(" Federation Exchange")]),s._v(" "),t("h3",{attrs:{id:"原理图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理图"}},[s._v("#")]),s._v(" 原理图")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116083223118.png",alt:"image-20220116083223118"}})]),s._v(" "),t("h3",{attrs:{id:"搭建步骤-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤-3"}},[s._v("#")]),s._v(" 搭建步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("需要保证每台节点单独运行")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("/sbin/service rabbitmq-server start\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("安装插件")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rabbitmq-plugins "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" rabbitmq_federation\nrabbitmq-plugins "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" rabbitmq_federation_management\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("blockquote",[t("p",[s._v("在 downstream(slave)里面创建 fed_exchange 交换机 和 slave_queue 队列")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("yixihan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("controller"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rabbitmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("federationexchange")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rabbitmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("yixihan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("controller"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rabbitmq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RabbitMqUtils")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nio"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("charset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StandardCharsets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * @author : yixihan\n * @create : 2022-01-16-8:35\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FederationExchange")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 交换机的名字\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" FED_EXCHANGE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fed_exchange"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"info"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"warning"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),s._v(" random "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Random")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Channel")]),s._v(" channel "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RabbitMqUtils")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getSlaveChannel "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exchangeDeclare "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("FED_EXCHANGE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"direct"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("queueDeclare "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fed_queue"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("queueBind "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fed_queue"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FED_EXCHANGE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"routingKey"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),s._v(" sc "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("in"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hasNext "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" random"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextInt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"这是一条 "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" 信息, 信息内容 : "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("println "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"发送的消息为 : "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("basicPublish "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("FED_EXCHANGE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" message"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getBytes "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StandardCharsets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UTF_8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br")])]),t("blockquote",[t("p",[s._v("在 downstream(slave)配置 upstream(matser)")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116085500694.png",alt:"image-20220116085500694"}})]),s._v(" "),t("blockquote",[t("p",[s._v("添加 policy")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116085621658.png",alt:"image-20220116085621658"}})]),s._v(" "),t("blockquote",[t("p",[s._v("成功的前提")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116085741736.png",alt:"image-20220116085741736"}})]),s._v(" "),t("h2",{attrs:{id:"federation-queue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#federation-queue"}},[s._v("#")]),s._v(" Federation Queue")]),s._v(" "),t("h3",{attrs:{id:"使用它的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用它的原因"}},[s._v("#")]),s._v(" 使用它的原因")]),s._v(" "),t("p",[s._v("联邦队列可以在多个 Broker 节点(或者集群)之间为单个队列提供均衡负载的功能。一个联邦队列可以连接一个或者多个上游队列(upstream queue)，并从这些上游队列中获取消息以满足本地消费者消费消息的需求。")]),s._v(" "),t("h3",{attrs:{id:"原理图-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理图-2"}},[s._v("#")]),s._v(" 原理图")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116085839233.png",alt:"image-20220116085839233"}})]),s._v(" "),t("h3",{attrs:{id:"搭建步骤-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤-4"}},[s._v("#")]),s._v(" 搭建步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("添加 upstream")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116085500694.png",alt:"image-20220116085500694"}})]),s._v(" "),t("blockquote",[t("p",[s._v("添加 policy")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116090200964.png",alt:"image-20220116090200964"}})]),s._v(" "),t("blockquote",[t("p",[s._v("成功的前提")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116090223927.png",alt:"image-20220116090223927"}})]),s._v(" "),t("h2",{attrs:{id:"shovel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shovel"}},[s._v("#")]),s._v(" Shovel")]),s._v(" "),t("h3",{attrs:{id:"使用它的原因-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用它的原因-2"}},[s._v("#")]),s._v(" 使用它的原因")]),s._v(" "),t("p",[s._v('Federation 具备的数据转发功能类似，Shovel 够可靠、持续地从一个 Broker 中的队列(作为源端，即 source)拉取数据并转发至另一个 Broker 中的交换器(作为目的端，即 destination)。作为源端的队列和作为目的端的交换器可以同时位于同一个 Broker，也可以位于不同的 Broker 上。Shovel 可以翻译为"铲子"，是一种比较形象的比喻，这个"铲子"可以将消息从一方"铲子"另一方。Shovel 行为就像优秀的客户端应用程序能够负责连接源和目的地、负责消息的读写及负责连接失败问题的处理。')]),s._v(" "),t("h3",{attrs:{id:"原理图-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理图-3"}},[s._v("#")]),s._v(" 原理图")]),s._v(" "),t("p",[s._v("在源头发送的消息直接回进入到目的地队列")]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116090444771.png",alt:"image-20220116090444771"}})]),s._v(" "),t("h3",{attrs:{id:"搭建步骤-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建步骤-5"}},[s._v("#")]),s._v(" 搭建步骤")]),s._v(" "),t("blockquote",[t("p",[s._v("开启插件(需要的机器都开启)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rabbitmq-plugins "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" rabbitmq_shovel\nrabbitmq-plugins "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" rabbitmq_shovel_management\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("blockquote",[t("p",[s._v("查看是否开启成功")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116090509492.png",alt:"image-20220116090509492"}})]),s._v(" "),t("blockquote",[t("p",[s._v("添加 shovel 源和目的地")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116090732414.png",alt:"image-20220116090732414"}})]),s._v(" "),t("blockquote",[t("p",[s._v("查看是否配置成功")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/assets/imgs/RabbitMQ2.assets/image-20220116090905830.png",alt:"image-20220116090905830"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);